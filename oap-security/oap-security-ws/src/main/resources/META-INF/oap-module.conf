{
  name = oap-security-ws
  dependsOn = [
    oap-http
  ]
  abstract = true
  services {
    password-hasher {
      implementation = oap.ws.security.PasswordHasher
    }

    auth-service {
      implementation = oap.security.ws.AuthService2
      parameters {
        userStorage = "@service:user-storage"
        passwordHasher = "@service:password-hasher"
      }
      dependsOn = [
        user-storage,
        password-hasher
      ]
    }

    token2-service {
      profile = "ws-security2"
      implementation = oap.security.ws.DefaultTokenService2
      parameters {
        authService = "@service:auth-service"
      }
      dependsOn = [
        auth-service
      ]
    }

    security-interceptor2-https {
      name = security-interceptor2
      profile = "ws-security2"
      implementation = oap.security.ws.SecurityInterceptor2
      parameters {
        tokenService = "@service:token2-service"
        aclService = "@service:acl-service"
      }
      dependsOn = [token2-service, acl-service]
    }

    security-interceptor2-mock {
      name = security-interceptor2
      profile = "ws-security2-mock"
      implementation = oap.security.ws.MockSecurityInterceptor2
    }

  }
}
