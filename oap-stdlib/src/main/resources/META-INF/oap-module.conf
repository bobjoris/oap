name = oap
services {
  oap-time-java {
    name = oap-time
    profile = java-time
    implementation = oap.time.JavaTimeService
  }

  oap-time-joda {
    name = oap-time
    profile = -java-time
    implementation = oap.time.JodaTimeService
  }

  oap-server {
    implementation = oap.http.server.nio.NioHttpServer
    parameters {
//      port = 8080

      backlog = -1
      idleTimeout = -1
      tcpNodelay = true
      ioThreads = -1
      workerThreads = -1
      maxEntitySize = -1
      maxParameters = -1
      maxHeaders = -1
      maxHeaderSize = -1
      statistics = false
      compressionSupport = true

      healthHttpHandler = modules.this.oap-http-health-handler
    }
    supervision.supervise = true
  }

  oap-http-health-handler {
    implementation = oap.http.server.nio.health.HealthHttpHandler
    parameters {
      providers = []
    }
  }

  remoting {
    implementation = oap.application.remote.Remote
    profile = remoting
    parameters {
      server = modules.this.oap-server
      context = /remote/
      serialization = DEFAULT
      kernel = kernel.self
    }
    supervision.supervise = true
  }

  prometheus-jvm-exporter {
    implementation = oap.prometheus.PrometheusJvmExporter
    parameters {
      enableClassLoaderMetrics = true
      enableJvmMemoryMetrics = true
      enableJvmGcMetrics = true
      enableLogbackMetrics = true
      enableJvmThreadMetrics = true
    }
    supervision.supervise = true
  }

  prometheus-application-info-exporter {
    implementation = oap.prometheus.PrometheusApplicationInfoExporter
    supervision.supervise = true
  }
}
